
;; Function lepton_connect (lepton_connect, funcdef_no=6, decl_uid=6898, cgraph_uid=6, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 11
New elimination table:
Can't eliminate 103 to 13 (offset=12, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can eliminate 103 to 11 (offset=0, prev_offset=0)
Can't eliminate 103 to 7 (offset=0, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can eliminate 102 to 11 (offset=-12, prev_offset=0)
Can't eliminate 102 to 7 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) mX {pic_load_addr_unified}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) mX {pic_load_addr_32bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 28:  (0) rk  (1) mi {*arm_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*arm_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) I {*arm_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) I {*arm_movsi_vfp}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) mX {pic_load_addr_32bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 30:  (0) rk  (1) mi {*arm_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) I {*arm_movsi_vfp}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 16:  (0) m  (1) r {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) I {*arm_movsi_vfp}
	   Spilling non-eliminable hard regs: 11

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 25: point = 0, n_alt = -1
   Insn 24: point = 0, n_alt = -2
   Insn 20: point = 1, n_alt = -2
   Insn 17: point = 3, n_alt = 1
   Insn 16: point = 4, n_alt = 8
   Insn 15: point = 5, n_alt = 1
   Insn 14: point = 7, n_alt = 1
   Insn 30: point = 8, n_alt = 4
   Insn 29: point = 10, n_alt = 0
   Insn 12: point = 11, n_alt = -1
   Insn 11: point = 11, n_alt = 1
   Insn 10: point = 11, n_alt = 1
   Insn 9: point = 11, n_alt = 1
   Insn 8: point = 11, n_alt = -2
   Insn 28: point = 12, n_alt = 4
   Insn 27: point = 14, n_alt = 0
   Insn 6: point = 15, n_alt = -1
   Insn 5: point = 15, n_alt = 0
 r110: [2..3]
 r111: [0..1]
 r112: [11..12]
 r113: [9..15]
 r114: [4..8]
 r115: [6..7]
 r116: [4..5]
 r118: [13..14]
 r119: [9..10]
Compressing live ranges: from 16 to 14 - 87%
Ranges after the compression:
 r110: [2..3]
 r111: [0..1]
 r112: [10..11]
 r113: [8..13]
 r114: [4..7]
 r115: [6..7]
 r116: [4..5]
 r118: [12..13]
 r119: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 11
	   Spilling non-eliminable hard regs: 11
New elimination table:
Can't eliminate 103 to 13 (offset=12, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can eliminate 103 to 11 (offset=0, prev_offset=0)
Can't eliminate 103 to 7 (offset=0, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can eliminate 102 to 11 (offset=-12, prev_offset=-12)
Can't eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 17
changing reg in insn 20
changing reg in insn 20
changing reg in insn 24
changing reg in insn 28
changing reg in insn 8
changing reg in insn 5
changing reg in insn 30
changing reg in insn 28
changing reg in insn 6
changing reg in insn 30
changing reg in insn 16
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
deleting insn with uid = 8.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.


lepton_connect

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={5d,3u} r3={7d,5u} r4={1d,3u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d} r15={1d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d,1u} 
;;    total ref usage 135{114d,21u,0e} in 16{15 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 110 111 112 113 114 115 116 118 119
(note 3 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 3 6 2 (set (reg:SI 4 r4 [113])
        (unspec:SI [
                (const:SI (unspec:SI [
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 8 [0x8])))
                        ] UNSPEC_GOTSYM_OFF))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "Lepton_I2C.c":12 180 {pic_load_addr_unified}
     (nil))
(insn 6 5 2 2 (use (reg:SI 4 r4 [113])) "Lepton_I2C.c":12 -1
     (nil))
(note 2 6 27 2 NOTE_INSN_FUNCTION_BEG)
(insn 27 2 28 2 (set (reg:SI 3 r3 [118])
        (unspec:SI [
                (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
            ] UNSPEC_PIC_SYM)) "Lepton_I2C.c":13 181 {pic_load_addr_32bit}
     (nil))
(insn 28 27 9 2 (set (reg:SI 3 r3 [112])
        (mem:SI (plus:SI (reg:SI 4 r4 [113])
                (reg:SI 3 r3 [118])) [0  S4 A32])) "Lepton_I2C.c":13 645 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(insn 9 28 10 2 (set (reg:SI 2 r2)
        (const_int 400 [0x190])) "Lepton_I2C.c":13 645 {*arm_movsi_vfp}
     (nil))
(insn 10 9 11 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "Lepton_I2C.c":13 645 {*arm_movsi_vfp}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "Lepton_I2C.c":13 645 {*arm_movsi_vfp}
     (nil))
(call_insn 12 11 29 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_OpenPort") [flags 0x41]  <function_decl 0xb65e2870 LEP_OpenPort>) [0 LEP_OpenPort S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":13 217 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(insn 29 12 30 2 (set (reg:SI 3 r3 [119])
        (unspec:SI [
                (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
            ] UNSPEC_PIC_SYM)) "Lepton_I2C.c":14 181 {pic_load_addr_32bit}
     (nil))
(insn 30 29 14 2 (set (reg/f:SI 3 r3 [114])
        (mem:SI (plus:SI (reg:SI 4 r4 [113])
                (reg:SI 3 r3 [119])) [0  S4 A32])) "Lepton_I2C.c":14 645 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))
(insn 14 30 15 2 (set (reg:SI 2 r2 [115])
        (const_int 1 [0x1])) "Lepton_I2C.c":14 645 {*arm_movsi_vfp}
     (nil))
(insn 15 14 16 2 (set (reg:QI 2 r2 [116])
        (reg:QI 2 r2 [115])) "Lepton_I2C.c":14 189 {*arm_movqi_insn}
     (nil))
(insn 16 15 17 2 (set (mem/c:QI (reg/f:SI 3 r3 [114]) [1 _connected+0 S1 A8])
        (reg:QI 2 r2 [116])) "Lepton_I2C.c":14 189 {*arm_movqi_insn}
     (nil))
(insn 17 16 24 2 (set (reg:SI 3 r3 [orig:110 _4 ] [110])
        (const_int 0 [0])) "Lepton_I2C.c":15 645 {*arm_movsi_vfp}
     (nil))
(insn 24 17 25 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:111 <retval> ] [111])) "Lepton_I2C.c":16 645 {*arm_movsi_vfp}
     (nil))
(insn 25 24 31 2 (use (reg/i:SI 0 r0)) "Lepton_I2C.c":16 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(note 31 25 0 NOTE_INSN_DELETED)

;; Function lepton_perform_ffc (lepton_perform_ffc, funcdef_no=7, decl_uid=5551, cgraph_uid=7, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 11
New elimination table:
Can't eliminate 103 to 13 (offset=12, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can eliminate 103 to 11 (offset=0, prev_offset=0)
Can't eliminate 103 to 7 (offset=0, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can eliminate 102 to 11 (offset=-12, prev_offset=0)
Can't eliminate 102 to 7 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) mX {pic_load_addr_unified}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) mX {pic_load_addr_32bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 26:  (0) rk  (1) mi {*arm_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) Uh {*arm_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =r  (1) %r  (2) I {*arm_xorsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) r {*arm_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) I {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) mX {pic_load_addr_32bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) rk  (1) mi {*arm_movsi_vfp}
	   Spilling non-eliminable hard regs: 11

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 22: point = 0, n_alt = -1
   Insn 19: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = 4
   Insn 23: point = 3, n_alt = 0
  BB 3
   Insn 14: point = 5, n_alt = -1
  BB 2
   Insn 12: point = 6, n_alt = -1
   Insn 11: point = 6, n_alt = 3
   Insn 10: point = 7, n_alt = 0
   Insn 9: point = 9, n_alt = 0
   Insn 8: point = 11, n_alt = 1
   Insn 26: point = 13, n_alt = 4
   Insn 25: point = 15, n_alt = 0
   Insn 6: point = 16, n_alt = -1
   Insn 5: point = 16, n_alt = 0
 r110: [10..11]
 r111: [6..7]
 r112: [12..13]
 r113: [2..16]
 r114: [8..9]
 r115: [0..1]
 r116: [2..3]
 r117: [14..15]
Compressing live ranges: from 17 to 14 - 82%
Ranges after the compression:
 r110: [8..9]
 r111: [4..5]
 r112: [10..11]
 r113: [2..13]
 r114: [6..7]
 r115: [0..1]
 r116: [2..3]
 r117: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 11
	   Spilling non-eliminable hard regs: 11
New elimination table:
Can't eliminate 103 to 13 (offset=12, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can eliminate 103 to 11 (offset=0, prev_offset=0)
Can't eliminate 103 to 7 (offset=0, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can eliminate 102 to 11 (offset=-12, prev_offset=-12)
Can't eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 26
changing reg in insn 8
changing reg in insn 5
changing reg in insn 24
changing reg in insn 26
changing reg in insn 6
changing reg in insn 9
changing reg in insn 24
changing reg in insn 18
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.


lepton_perform_ffc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 4 [r4] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,1u} r1={3d} r2={3d} r3={10d,7u} r4={1d,3u} r11={1d,4u} r12={4d} r13={1d,6u} r14={3d} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} 
;;    total ref usage 213{190d,23u,0e} in 15{13 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 110 111 112 113 114 117
(note 3 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 3 6 2 (set (reg:SI 4 r4 [113])
        (unspec:SI [
                (const:SI (unspec:SI [
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1 [0x1])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 8 [0x8])))
                        ] UNSPEC_GOTSYM_OFF))
                (const_int 1 [0x1])
            ] UNSPEC_PIC_UNIFIED)) "Lepton_I2C.c":18 180 {pic_load_addr_unified}
     (nil))
(insn 6 5 2 2 (use (reg:SI 4 r4 [113])) "Lepton_I2C.c":18 -1
     (nil))
(note 2 6 25 2 NOTE_INSN_FUNCTION_BEG)
(insn 25 2 26 2 (set (reg:SI 3 r3 [117])
        (unspec:SI [
                (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
            ] UNSPEC_PIC_SYM)) "Lepton_I2C.c":19 181 {pic_load_addr_32bit}
     (nil))
(insn 26 25 8 2 (set (reg/f:SI 3 r3 [112])
        (mem:SI (plus:SI (reg:SI 4 r4 [113])
                (reg:SI 3 r3 [117])) [0  S4 A32])) "Lepton_I2C.c":19 645 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))
(insn 8 26 9 2 (set (reg:SI 3 r3 [orig:110 _connected.0_1 ] [110])
        (zero_extend:SI (mem/c:QI (reg/f:SI 3 r3 [112]) [1 _connected+0 S1 A8]))) "Lepton_I2C.c":19 167 {*arm_zero_extendqisi2_v6}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [114])
        (xor:SI (reg:SI 3 r3 [orig:110 _connected.0_1 ] [110])
            (const_int 1 [0x1]))) "Lepton_I2C.c":19 111 {*arm_xorsi3}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (reg:QI 3 r3 [114]))) "Lepton_I2C.c":19 167 {*arm_zero_extendqisi2_v6}
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:111 _2 ] [111])
            (const_int 0 [0]))) "Lepton_I2C.c":19 193 {*arm_cmpsi_insn}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "Lepton_I2C.c":19 201 {arm_cond_branch}
     (nil)
 -> 15)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 14 13 15 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lepton_connect") [flags 0x1]  <function_decl 0xb62092d0 lepton_connect>) [0 lepton_connect S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":20 217 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 115 116
(code_label 15 14 16 4 6 (nil) [1 uses])
(note 16 15 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 16 24 4 (set (reg:SI 3 r3 [116])
        (unspec:SI [
                (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
            ] UNSPEC_PIC_SYM)) "Lepton_I2C.c":22 181 {pic_load_addr_32bit}
     (nil))
(insn 24 23 18 4 (set (reg:SI 3 r3 [115])
        (mem:SI (plus:SI (reg:SI 4 r4 [113])
                (reg:SI 3 r3 [116])) [0  S4 A32])) "Lepton_I2C.c":22 645 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(insn 18 24 19 4 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [115])) "Lepton_I2C.c":22 645 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(call_insn 19 18 22 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_RunSysFFCNormalization") [flags 0x41]  <function_decl 0xb61f0ac8 LEP_RunSysFFCNormalization>) [0 LEP_RunSysFFCNormalization S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":22 217 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 22 19 27 4 (const_int 0 [0]) "Lepton_I2C.c":23 233 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(note 27 22 0 NOTE_INSN_DELETED)

;; Function lepton_reboot (lepton_reboot, funcdef_no=8, decl_uid=5552, cgraph_uid=8, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 11
New elimination table:
Can't eliminate 103 to 13 (offset=12, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can eliminate 103 to 11 (offset=0, prev_offset=0)
Can't eliminate 103 to 7 (offset=0, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can eliminate 102 to 11 (offset=-12, prev_offset=0)
Can't eliminate 102 to 7 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) mX {pic_load_addr_unified}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) mX {pic_load_addr_32bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 26:  (0) rk  (1) mi {*arm_movsi_vfp}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) Uh {*arm_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 9:  (0) =r  (1) %r  (2) I {*arm_xorsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) r {*arm_zero_extendqisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) I {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) mX {pic_load_addr_32bit}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) rk  (1) mi {*arm_movsi_vfp}
	   Spilling non-eliminable hard regs: 11

********** Inheritance #1: **********

EBB 2 3
EBB 4

********** Pseudo live ranges #1: **********

  BB 4
   Insn 22: point = 0, n_alt = -1
   Insn 19: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = 4
   Insn 23: point = 3, n_alt = 0
  BB 3
   Insn 14: point = 5, n_alt = -1
  BB 2
   Insn 12: point = 6, n_alt = -1
   Insn 11: point = 6, n_alt = 3
   Insn 10: point = 7, n_alt = 0
   Insn 9: point = 9, n_alt = 0
   Insn 8: point = 11, n_alt = 1
   Insn 26: point = 13, n_alt = 4
   Insn 25: point = 15, n_alt = 0
   Insn 6: point = 16, n_alt = -1
   Insn 5: point = 16, n_alt = 0
 r110: [10..11]
 r111: [6..7]
 r112: [12..13]
 r113: [2..16]
 r114: [8..9]
 r115: [0..1]
 r116: [2..3]
 r117: [14..15]
Compressing live ranges: from 17 to 14 - 82%
Ranges after the compression:
 r110: [8..9]
 r111: [4..5]
 r112: [10..11]
 r113: [2..13]
 r114: [6..7]
 r115: [0..1]
 r116: [2..3]
 r117: [12..13]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 11
	   Spilling non-eliminable hard regs: 11
New elimination table:
Can't eliminate 103 to 13 (offset=12, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can eliminate 103 to 11 (offset=0, prev_offset=0)
Can't eliminate 103 to 7 (offset=0, prev_offset=0)
Can't eliminate 102 to 13 (offset=0, prev_offset=0)
Can eliminate 102 to 11 (offset=-12, prev_offset=-12)
Can't eliminate 102 to 7 (offset=0, prev_offset=0)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 26
changing reg in insn 8
changing reg in insn 5
changing reg in insn 24
changing reg in insn 26
changing reg in insn 6
changing reg in insn 9
changing reg in insn 24
changing reg in insn 18
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.


lepton_reboot

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
;;  hardware regs used 	
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 102 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 4 [r4] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={4d,1u} r1={3d} r2={3d} r3={10d,7u} r4={1d,3u} r11={1d,4u} r12={4d} r13={1d,6u} r14={3d} r15={2d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={3d,1u} r101={2d} r102={1d,1u} 
;;    total ref usage 213{190d,23u,0e} in 15{13 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 110 111 112 113 114 117
(note 3 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 3 6 2 (set (reg:SI 4 r4 [113])
        (unspec:SI [
                (const:SI (unspec:SI [
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 2 [0x2])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 8 [0x8])))
                        ] UNSPEC_GOTSYM_OFF))
                (const_int 2 [0x2])
            ] UNSPEC_PIC_UNIFIED)) "Lepton_I2C.c":27 180 {pic_load_addr_unified}
     (nil))
(insn 6 5 2 2 (use (reg:SI 4 r4 [113])) "Lepton_I2C.c":27 -1
     (nil))
(note 2 6 25 2 NOTE_INSN_FUNCTION_BEG)
(insn 25 2 26 2 (set (reg:SI 3 r3 [117])
        (unspec:SI [
                (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
            ] UNSPEC_PIC_SYM)) "Lepton_I2C.c":28 181 {pic_load_addr_32bit}
     (nil))
(insn 26 25 8 2 (set (reg/f:SI 3 r3 [112])
        (mem:SI (plus:SI (reg:SI 4 r4 [113])
                (reg:SI 3 r3 [117])) [0  S4 A32])) "Lepton_I2C.c":28 645 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))
(insn 8 26 9 2 (set (reg:SI 3 r3 [orig:110 _connected.1_1 ] [110])
        (zero_extend:SI (mem/c:QI (reg/f:SI 3 r3 [112]) [1 _connected+0 S1 A8]))) "Lepton_I2C.c":28 167 {*arm_zero_extendqisi2_v6}
     (nil))
(insn 9 8 10 2 (set (reg:SI 3 r3 [114])
        (xor:SI (reg:SI 3 r3 [orig:110 _connected.1_1 ] [110])
            (const_int 1 [0x1]))) "Lepton_I2C.c":28 111 {*arm_xorsi3}
     (nil))
(insn 10 9 11 2 (set (reg:SI 3 r3 [orig:111 _2 ] [111])
        (zero_extend:SI (reg:QI 3 r3 [114]))) "Lepton_I2C.c":28 167 {*arm_zero_extendqisi2_v6}
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:111 _2 ] [111])
            (const_int 0 [0]))) "Lepton_I2C.c":28 193 {*arm_cmpsi_insn}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "Lepton_I2C.c":28 201 {arm_cond_branch}
     (nil)
 -> 15)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc]
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 14 13 15 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lepton_connect") [flags 0x1]  <function_decl 0xb62092d0 lepton_connect>) [0 lepton_connect S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":29 217 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 115 116
(code_label 15 14 16 4 10 (nil) [1 uses])
(note 16 15 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 16 24 4 (set (reg:SI 3 r3 [116])
        (unspec:SI [
                (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
            ] UNSPEC_PIC_SYM)) "Lepton_I2C.c":31 181 {pic_load_addr_32bit}
     (nil))
(insn 24 23 18 4 (set (reg:SI 3 r3 [115])
        (mem:SI (plus:SI (reg:SI 4 r4 [113])
                (reg:SI 3 r3 [116])) [0  S4 A32])) "Lepton_I2C.c":31 645 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(insn 18 24 19 4 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [115])) "Lepton_I2C.c":31 645 {*arm_movsi_vfp}
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(call_insn 19 18 22 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_RunOemReboot") [flags 0x41]  <function_decl 0xb61f0ca8 LEP_RunOemReboot>) [0 LEP_RunOemReboot S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":31 217 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 22 19 27 4 (const_int 0 [0]) "Lepton_I2C.c":32 233 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 11 [fp] 13 [sp] 102 [sfp] 103 [afp]

(note 27 22 0 NOTE_INSN_DELETED)
