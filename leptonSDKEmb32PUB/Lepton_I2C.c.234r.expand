
;; Function lepton_connect (lepton_connect, funcdef_no=6, decl_uid=6898, cgraph_uid=6, symbol_order=8)

lepton_connect ()
{
  int D.6908;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  LEP_OpenPort (1, 0, 400, &_port);
  _connected = 1;
  _4 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 4 (_4 - 4 )
Partition 5 (_5(D) - 5 )


Coalescible Partition map 

Partition 0, base 0 (_5(D) - 5 )


Partition map 

Partition 0 (_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (_4 - 4 )
Partition 1 (_5(D) - 5 )

lepton_connect ()
{
  int D.6908;
  int _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  LEP_OpenPort (1, 0, 400, &_port);
  _connected = 1;
  _4 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _4;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; LEP_OpenPort (1, 0, 400, &_port);

(insn 7 4 8 (set (reg:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":13 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))

(insn 8 7 9 (set (reg:SI 3 r3)
        (reg:SI 112)) "Lepton_I2C.c":13 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))

(insn 9 8 10 (set (reg:SI 2 r2)
        (const_int 400 [0x190])) "Lepton_I2C.c":13 -1
     (nil))

(insn 10 9 11 (set (reg:SI 1 r1)
        (const_int 0 [0])) "Lepton_I2C.c":13 -1
     (nil))

(insn 11 10 12 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "Lepton_I2C.c":13 -1
     (nil))

(call_insn 12 11 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_OpenPort") [flags 0x41]  <function_decl 0xb65e2870 LEP_OpenPort>) [0 LEP_OpenPort S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":13 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))

;; _connected = 1;

(insn 13 12 14 (set (reg/f:SI 114)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":14 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))

(insn 14 13 15 (set (reg:SI 115)
        (const_int 1 [0x1])) "Lepton_I2C.c":14 -1
     (nil))

(insn 15 14 16 (set (reg:QI 116)
        (subreg:QI (reg:SI 115) 0)) "Lepton_I2C.c":14 -1
     (nil))

(insn 16 15 0 (set (mem/c:QI (reg/f:SI 114) [1 _connected+0 S1 A8])
        (reg:QI 116)) "Lepton_I2C.c":14 -1
     (nil))

;; _4 = 0;

(insn 17 16 0 (set (reg:SI 110 [ _4 ])
        (const_int 0 [0])) "Lepton_I2C.c":15 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 18 17 19 2 (nil) [0 uses])

(note 19 18 0 NOTE_INSN_BASIC_BLOCK)

;; return _4;

(insn 20 19 21 (set (reg:SI 111 [ <retval> ])
        (reg:SI 110 [ _4 ])) "Lepton_I2C.c":15 -1
     (nil))

(jump_insn 21 20 22 (set (pc)
        (label_ref 0)) "Lepton_I2C.c":15 -1
     (nil))

(barrier 22 21 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 21.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 3 6 2 (set (reg:SI 113)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 0 [0])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 8 [0x8])))
                        ] UNSPEC_GOTSYM_OFF))
                (const_int 0 [0])
            ] UNSPEC_PIC_UNIFIED)) "Lepton_I2C.c":12 -1
     (nil))
(insn 6 5 2 2 (use (reg:SI 113)) "Lepton_I2C.c":12 -1
     (nil))
(note 2 6 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":13 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 3 r3)
        (reg:SI 112)) "Lepton_I2C.c":13 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 2 r2)
        (const_int 400 [0x190])) "Lepton_I2C.c":13 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 1 r1)
        (const_int 0 [0])) "Lepton_I2C.c":13 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) "Lepton_I2C.c":13 -1
     (nil))
(call_insn 12 11 13 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_OpenPort") [flags 0x41]  <function_decl 0xb65e2870 LEP_OpenPort>) [0 LEP_OpenPort S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":13 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (expr_list:SI (use (reg:SI 1 r1))
                (expr_list:HI (use (reg:SI 2 r2))
                    (expr_list:SI (use (reg:SI 3 r3))
                        (nil)))))))
(insn 13 12 14 2 (set (reg/f:SI 114)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":14 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))
(insn 14 13 15 2 (set (reg:SI 115)
        (const_int 1 [0x1])) "Lepton_I2C.c":14 -1
     (nil))
(insn 15 14 16 2 (set (reg:QI 116)
        (subreg:QI (reg:SI 115) 0)) "Lepton_I2C.c":14 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:QI (reg/f:SI 114) [1 _connected+0 S1 A8])
        (reg:QI 116)) "Lepton_I2C.c":14 -1
     (nil))
(insn 17 16 20 2 (set (reg:SI 110 [ _4 ])
        (const_int 0 [0])) "Lepton_I2C.c":15 -1
     (nil))
(insn 20 17 24 2 (set (reg:SI 111 [ <retval> ])
        (reg:SI 110 [ _4 ])) "Lepton_I2C.c":15 -1
     (nil))
(insn 24 20 25 2 (set (reg/i:SI 0 r0)
        (reg:SI 111 [ <retval> ])) "Lepton_I2C.c":16 -1
     (nil))
(insn 25 24 0 2 (use (reg/i:SI 0 r0)) "Lepton_I2C.c":16 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function lepton_perform_ffc (lepton_perform_ffc, funcdef_no=7, decl_uid=5551, cgraph_uid=7, symbol_order=9)

lepton_perform_ffc ()
{
  _Bool _connected.0_1;
  _Bool _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _connected.0_1 = _connected;
  _2 = ~_connected.0_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  lepton_connect ();
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  LEP_RunSysFFCNormalization (&_port);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_connected.0_1 - 1 )
Partition 2 (_2 - 2 )


Coalescible Partition map 


After Coalescing:

Partition map 

Partition 0 (_connected.0_1 - 1 )
Partition 1 (_2 - 2 )

lepton_perform_ffc ()
{
  _Bool _connected.0_1;
  _Bool _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _connected.0_1 = _connected;
  _2 = ~_connected.0_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  lepton_connect ();
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  LEP_RunSysFFCNormalization (&_port);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _connected.0_1 = _connected;

(insn 7 4 8 (set (reg/f:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":19 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))

(insn 8 7 0 (set (reg:SI 110 [ _connected.0_1 ])
        (zero_extend:SI (mem/c:QI (reg/f:SI 112) [1 _connected+0 S1 A8]))) "Lepton_I2C.c":19 -1
     (nil))

;; _2 = ~_connected.0_1;

(insn 9 8 10 (set (reg:SI 114)
        (xor:SI (reg:SI 110 [ _connected.0_1 ])
            (const_int 1 [0x1]))) "Lepton_I2C.c":19 -1
     (nil))

(insn 10 9 0 (set (reg:SI 111 [ _2 ])
        (zero_extend:SI (subreg:QI (reg:SI 114) 0))) "Lepton_I2C.c":19 -1
     (nil))

;; if (_2 != 0)

(insn 11 10 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 111 [ _2 ])
            (const_int 0 [0]))) "Lepton_I2C.c":19 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "Lepton_I2C.c":19 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; lepton_connect ();

(call_insn 14 13 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lepton_connect") [flags 0x1]  <function_decl 0xb62092d0 lepton_connect>) [0 lepton_connect S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":20 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 6 (nil) [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; LEP_RunSysFFCNormalization (&_port);

(insn 17 16 18 (set (reg:SI 115)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":22 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))

(insn 18 17 19 (set (reg:SI 0 r0)
        (reg:SI 115)) "Lepton_I2C.c":22 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))

(call_insn 19 18 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_RunSysFFCNormalization") [flags 0x41]  <function_decl 0xb61f0ac8 LEP_RunSysFFCNormalization>) [0 LEP_RunSysFFCNormalization S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":22 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 3 6 2 (set (reg:SI 113)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 1 [0x1])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 8 [0x8])))
                        ] UNSPEC_GOTSYM_OFF))
                (const_int 1 [0x1])
            ] UNSPEC_PIC_UNIFIED)) "Lepton_I2C.c":18 -1
     (nil))
(insn 6 5 2 2 (use (reg:SI 113)) "Lepton_I2C.c":18 -1
     (nil))
(note 2 6 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg/f:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":19 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 110 [ _connected.0_1 ])
        (zero_extend:SI (mem/c:QI (reg/f:SI 112) [1 _connected+0 S1 A8]))) "Lepton_I2C.c":19 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 114)
        (xor:SI (reg:SI 110 [ _connected.0_1 ])
            (const_int 1 [0x1]))) "Lepton_I2C.c":19 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 111 [ _2 ])
        (zero_extend:SI (subreg:QI (reg:SI 114) 0))) "Lepton_I2C.c":19 -1
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 111 [ _2 ])
            (const_int 0 [0]))) "Lepton_I2C.c":19 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "Lepton_I2C.c":19 -1
     (nil)
 -> 15)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 14 13 15 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lepton_connect") [flags 0x1]  <function_decl 0xb62092d0 lepton_connect>) [0 lepton_connect S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":20 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 15 14 16 5 6 (nil) [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:SI 115)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":22 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(insn 18 17 19 5 (set (reg:SI 0 r0)
        (reg:SI 115)) "Lepton_I2C.c":22 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(call_insn 19 18 22 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_RunSysFFCNormalization") [flags 0x41]  <function_decl 0xb61f0ac8 LEP_RunSysFFCNormalization>) [0 LEP_RunSysFFCNormalization S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":22 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 22 19 0 5 (const_int 0 [0]) "Lepton_I2C.c":23 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function lepton_reboot (lepton_reboot, funcdef_no=8, decl_uid=5552, cgraph_uid=8, symbol_order=10)

lepton_reboot ()
{
  _Bool _connected.1_1;
  _Bool _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _connected.1_1 = _connected;
  _2 = ~_connected.1_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  lepton_connect ();
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  LEP_RunOemReboot (&_port);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_connected.1_1 - 1 )
Partition 2 (_2 - 2 )


Coalescible Partition map 


After Coalescing:

Partition map 

Partition 0 (_connected.1_1 - 1 )
Partition 1 (_2 - 2 )

lepton_reboot ()
{
  _Bool _connected.1_1;
  _Bool _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _connected.1_1 = _connected;
  _2 = ~_connected.1_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  lepton_connect ();
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  LEP_RunOemReboot (&_port);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _connected.1_1 = _connected;

(insn 7 4 8 (set (reg/f:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":28 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))

(insn 8 7 0 (set (reg:SI 110 [ _connected.1_1 ])
        (zero_extend:SI (mem/c:QI (reg/f:SI 112) [1 _connected+0 S1 A8]))) "Lepton_I2C.c":28 -1
     (nil))

;; _2 = ~_connected.1_1;

(insn 9 8 10 (set (reg:SI 114)
        (xor:SI (reg:SI 110 [ _connected.1_1 ])
            (const_int 1 [0x1]))) "Lepton_I2C.c":28 -1
     (nil))

(insn 10 9 0 (set (reg:SI 111 [ _2 ])
        (zero_extend:SI (subreg:QI (reg:SI 114) 0))) "Lepton_I2C.c":28 -1
     (nil))

;; if (_2 != 0)

(insn 11 10 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 111 [ _2 ])
            (const_int 0 [0]))) "Lepton_I2C.c":28 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "Lepton_I2C.c":28 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; lepton_connect ();

(call_insn 14 13 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lepton_connect") [flags 0x1]  <function_decl 0xb62092d0 lepton_connect>) [0 lepton_connect S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":29 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 10 (nil) [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; LEP_RunOemReboot (&_port);

(insn 17 16 18 (set (reg:SI 115)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":31 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))

(insn 18 17 19 (set (reg:SI 0 r0)
        (reg:SI 115)) "Lepton_I2C.c":31 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))

(call_insn 19 18 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_RunOemReboot") [flags 0x41]  <function_decl 0xb61f0ca8 LEP_RunOemReboot>) [0 LEP_RunOemReboot S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":31 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 5 3 6 2 (set (reg:SI 113)
        (unspec:SI [
                (const:SI (unspec:SI [
                            (const:SI (plus:SI (unspec:SI [
                                            (const_int 2 [0x2])
                                        ] UNSPEC_PIC_LABEL)
                                    (const_int 8 [0x8])))
                        ] UNSPEC_GOTSYM_OFF))
                (const_int 2 [0x2])
            ] UNSPEC_PIC_UNIFIED)) "Lepton_I2C.c":27 -1
     (nil))
(insn 6 5 2 2 (use (reg:SI 113)) "Lepton_I2C.c":27 -1
     (nil))
(note 2 6 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg/f:SI 112)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":28 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_connected")  <var_decl 0xb62009a0 _connected>)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 110 [ _connected.1_1 ])
        (zero_extend:SI (mem/c:QI (reg/f:SI 112) [1 _connected+0 S1 A8]))) "Lepton_I2C.c":28 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 114)
        (xor:SI (reg:SI 110 [ _connected.1_1 ])
            (const_int 1 [0x1]))) "Lepton_I2C.c":28 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 111 [ _2 ])
        (zero_extend:SI (subreg:QI (reg:SI 114) 0))) "Lepton_I2C.c":28 -1
     (nil))
(insn 11 10 12 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 111 [ _2 ])
            (const_int 0 [0]))) "Lepton_I2C.c":28 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) "Lepton_I2C.c":28 -1
     (nil)
 -> 15)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 14 13 15 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lepton_connect") [flags 0x1]  <function_decl 0xb62092d0 lepton_connect>) [0 lepton_connect S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":29 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 15 14 16 5 10 (nil) [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:SI 115)
        (mem/u/c:SI (plus:SI (reg:SI 113)
                (unspec:SI [
                        (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
                    ] UNSPEC_PIC_SYM)) [0  S4 A32])) "Lepton_I2C.c":31 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(insn 18 17 19 5 (set (reg:SI 0 r0)
        (reg:SI 115)) "Lepton_I2C.c":31 -1
     (expr_list:REG_EQUAL (symbol_ref:SI ("_port")  <var_decl 0xb62009f8 _port>)
        (nil)))
(call_insn 19 18 22 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("LEP_RunOemReboot") [flags 0x41]  <function_decl 0xb61f0ca8 LEP_RunOemReboot>) [0 LEP_RunOemReboot S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "Lepton_I2C.c":31 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:SI (use (reg:SI 0 r0))
            (nil))))
(insn 22 19 0 5 (const_int 0 [0]) "Lepton_I2C.c":32 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

